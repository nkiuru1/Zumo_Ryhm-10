ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Timer_Enable, %function
  25              	Timer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Timer.c"
   1:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer.c **** * File Name: Timer.c
   3:Generated_Source\PSoC5/Timer.c **** * Version 2.70
   4:Generated_Source\PSoC5/Timer.c **** *
   5:Generated_Source\PSoC5/Timer.c **** * Description:
   6:Generated_Source\PSoC5/Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer.c **** *
  15:Generated_Source\PSoC5/Timer.c **** * Note:
  16:Generated_Source\PSoC5/Timer.c **** *
  17:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer.c **** 
  24:Generated_Source\PSoC5/Timer.c **** #include "Timer.h"
  25:Generated_Source\PSoC5/Timer.c **** 
  26:Generated_Source\PSoC5/Timer.c **** uint8 Timer_initVar = 0u;
  27:Generated_Source\PSoC5/Timer.c **** 
  28:Generated_Source\PSoC5/Timer.c **** 
  29:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Init
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 2


  31:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer.c **** *
  33:Generated_Source\PSoC5/Timer.c **** * Summary:
  34:Generated_Source\PSoC5/Timer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer.c **** *
  36:Generated_Source\PSoC5/Timer.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer.c **** *  void
  38:Generated_Source\PSoC5/Timer.c **** *
  39:Generated_Source\PSoC5/Timer.c **** * Return:
  40:Generated_Source\PSoC5/Timer.c **** *  void
  41:Generated_Source\PSoC5/Timer.c **** *
  42:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer.c **** void Timer_Init(void) 
  44:Generated_Source\PSoC5/Timer.c **** {
  45:Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer.c ****             uint8 Timer_interruptState;
  48:Generated_Source\PSoC5/Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer.c **** 
  50:Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= Timer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer.c **** 
  54:Generated_Source\PSoC5/Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL2 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer.c **** 
  59:Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer.c **** 
  63:Generated_Source\PSoC5/Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer.c **** 
  69:Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer.c **** 
  76:Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer.c **** 
  82:Generated_Source\PSoC5/Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer.c **** 
  84:Generated_Source\PSoC5/Timer.c ****         #if (Timer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= Timer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 3


  88:Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer.c **** 
  90:Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer.c **** 
  95:Generated_Source\PSoC5/Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer.c **** 
  99:Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer.c **** 
 103:Generated_Source\PSoC5/Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer.c **** 
 105:Generated_Source\PSoC5/Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_RT1_MASK));
 107:Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNC;
 108:Generated_Source\PSoC5/Timer.c **** 
 109:Generated_Source\PSoC5/Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer.c **** 
 113:Generated_Source\PSoC5/Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL2 |= Timer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer.c **** 
 117:Generated_Source\PSoC5/Timer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer.c ****     Timer_WritePeriod(Timer_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer.c **** 
 121:Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer.c ****         Timer_CAPTURE_COUNT_CTRL |= Timer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer.c ****         Timer_SetCaptureCount(Timer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer.c **** 
 126:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer.c ****             Timer_SetCaptureMode(Timer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer.c **** 
 131:Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer.c ****             #if (!Timer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer.c ****                 if (0u == (Timer_CONTROL & Timer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer.c ****                 {
 135:Generated_Source\PSoC5/Timer.c ****                     Timer_SetTriggerMode(Timer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer.c ****                 }
 137:Generated_Source\PSoC5/Timer.c ****             #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer.c **** 
 140:Generated_Source\PSoC5/Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer.c ****         Timer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer.c **** 
 144:Generated_Source\PSoC5/Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 4


 145:Generated_Source\PSoC5/Timer.c ****         Timer_STATUS_AUX_CTRL |= Timer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer.c **** 
 147:Generated_Source\PSoC5/Timer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer.c ****         CyExitCriticalSection(Timer_interruptState);
 149:Generated_Source\PSoC5/Timer.c **** 
 150:Generated_Source\PSoC5/Timer.c ****         #if (Timer_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer.c ****             Timer_EnableTrigger();
 152:Generated_Source\PSoC5/Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer.c **** 		
 154:Generated_Source\PSoC5/Timer.c **** 		
 155:Generated_Source\PSoC5/Timer.c ****         #if (Timer_InterruptOnCaptureCount && !Timer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer.c ****             Timer_SetInterruptCount(Timer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer.c **** 
 159:Generated_Source\PSoC5/Timer.c ****         Timer_ClearFIFO();
 160:Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer.c **** 
 162:Generated_Source\PSoC5/Timer.c ****     Timer_SetInterruptMode(Timer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer.c **** }
 164:Generated_Source\PSoC5/Timer.c **** 
 165:Generated_Source\PSoC5/Timer.c **** 
 166:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Enable
 168:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer.c **** *
 170:Generated_Source\PSoC5/Timer.c **** * Summary:
 171:Generated_Source\PSoC5/Timer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer.c **** *
 173:Generated_Source\PSoC5/Timer.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer.c **** *  void
 175:Generated_Source\PSoC5/Timer.c **** *
 176:Generated_Source\PSoC5/Timer.c **** * Return:
 177:Generated_Source\PSoC5/Timer.c **** *  void
 178:Generated_Source\PSoC5/Timer.c **** *
 179:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer.c **** void Timer_Enable(void) 
 181:Generated_Source\PSoC5/Timer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE1:
  36              		.size	Timer_Enable, .-Timer_Enable
  37 0002 00BF     		.section	.text.Timer_Stop,"ax",%progbits
  38              		.align	2
  39              		.global	Timer_Stop
  40              		.thumb
  41              		.thumb_func
  42              		.type	Timer_Stop, %function
  43              	Timer_Stop:
  44              	.LFB3:
 182:Generated_Source\PSoC5/Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE |= Timer_BLOCK_EN_MASK;
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 5


 185:Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE |= Timer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer.c **** 
 188:Generated_Source\PSoC5/Timer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_ENABLE;
 191:Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer.c **** }
 193:Generated_Source\PSoC5/Timer.c **** 
 194:Generated_Source\PSoC5/Timer.c **** 
 195:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Start
 197:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer.c **** *
 199:Generated_Source\PSoC5/Timer.c **** * Summary:
 200:Generated_Source\PSoC5/Timer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer.c **** *
 204:Generated_Source\PSoC5/Timer.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer.c **** *  void
 206:Generated_Source\PSoC5/Timer.c **** *
 207:Generated_Source\PSoC5/Timer.c **** * Return:
 208:Generated_Source\PSoC5/Timer.c **** *  void
 209:Generated_Source\PSoC5/Timer.c **** *
 210:Generated_Source\PSoC5/Timer.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer.c **** *  Timer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer.c **** *
 214:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer.c **** void Timer_Start(void) 
 216:Generated_Source\PSoC5/Timer.c **** {
 217:Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 218:Generated_Source\PSoC5/Timer.c ****     {
 219:Generated_Source\PSoC5/Timer.c ****         Timer_Init();
 220:Generated_Source\PSoC5/Timer.c **** 
 221:Generated_Source\PSoC5/Timer.c ****         Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer.c ****     }
 223:Generated_Source\PSoC5/Timer.c **** 
 224:Generated_Source\PSoC5/Timer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer.c ****     Timer_Enable();
 226:Generated_Source\PSoC5/Timer.c **** }
 227:Generated_Source\PSoC5/Timer.c **** 
 228:Generated_Source\PSoC5/Timer.c **** 
 229:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Stop
 231:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer.c **** *
 233:Generated_Source\PSoC5/Timer.c **** * Summary:
 234:Generated_Source\PSoC5/Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer.c **** *
 237:Generated_Source\PSoC5/Timer.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer.c **** *  void
 239:Generated_Source\PSoC5/Timer.c **** *
 240:Generated_Source\PSoC5/Timer.c **** * Return:
 241:Generated_Source\PSoC5/Timer.c **** *  void
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 6


 242:Generated_Source\PSoC5/Timer.c **** *
 243:Generated_Source\PSoC5/Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer.c **** *
 246:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer.c **** void Timer_Stop(void) 
 248:Generated_Source\PSoC5/Timer.c **** {
  45              		.loc 1 248 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	Timer_Stop, .-Timer_Stop
  54 0002 00BF     		.section	.text.Timer_SetInterruptMode,"ax",%progbits
  55              		.align	2
  56              		.global	Timer_SetInterruptMode
  57              		.thumb
  58              		.thumb_func
  59              		.type	Timer_SetInterruptMode, %function
  60              	Timer_SetInterruptMode:
  61              	.LFB4:
 249:Generated_Source\PSoC5/Timer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_ENABLE));
 252:Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer.c **** 
 254:Generated_Source\PSoC5/Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE &= ((uint8)(~Timer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer.c **** }
 260:Generated_Source\PSoC5/Timer.c **** 
 261:Generated_Source\PSoC5/Timer.c **** 
 262:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptMode
 264:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer.c **** *
 266:Generated_Source\PSoC5/Timer.c **** * Summary:
 267:Generated_Source\PSoC5/Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer.c **** *
 271:Generated_Source\PSoC5/Timer.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer.c **** *
 275:Generated_Source\PSoC5/Timer.c **** * Return:
 276:Generated_Source\PSoC5/Timer.c **** *  void
 277:Generated_Source\PSoC5/Timer.c **** *
 278:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer.c **** {
  62              		.loc 1 280 0
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 7


  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL0:
 281:Generated_Source\PSoC5/Timer.c ****     Timer_STATUS_MASK = interruptMode;
  68              		.loc 1 281 0
  69 0000 014B     		ldr	r3, .L4
  70 0002 1870     		strb	r0, [r3]
  71 0004 7047     		bx	lr
  72              	.L5:
  73 0006 00BF     		.align	2
  74              	.L4:
  75 0008 8C640040 		.word	1073767564
  76              		.cfi_endproc
  77              	.LFE4:
  78              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
  79              		.section	.text.Timer_SoftwareCapture,"ax",%progbits
  80              		.align	2
  81              		.global	Timer_SoftwareCapture
  82              		.thumb
  83              		.thumb_func
  84              		.type	Timer_SoftwareCapture, %function
  85              	Timer_SoftwareCapture:
  86              	.LFB5:
 282:Generated_Source\PSoC5/Timer.c **** }
 283:Generated_Source\PSoC5/Timer.c **** 
 284:Generated_Source\PSoC5/Timer.c **** 
 285:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SoftwareCapture
 287:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer.c **** *
 289:Generated_Source\PSoC5/Timer.c **** * Summary:
 290:Generated_Source\PSoC5/Timer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer.c **** *
 292:Generated_Source\PSoC5/Timer.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer.c **** *  void
 294:Generated_Source\PSoC5/Timer.c **** *
 295:Generated_Source\PSoC5/Timer.c **** * Return:
 296:Generated_Source\PSoC5/Timer.c **** *  void
 297:Generated_Source\PSoC5/Timer.c **** *
 298:Generated_Source\PSoC5/Timer.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer.c **** *
 301:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer.c **** void Timer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer.c **** {
  87              		.loc 1 303 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer.c ****     #else
 308:Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 8


  92              		.loc 1 308 0
  93 0000 014B     		ldr	r3, .L7
  94 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95 0004 7047     		bx	lr
  96              	.L8:
  97 0006 00BF     		.align	2
  98              	.L7:
  99 0008 0C640040 		.word	1073767436
 100              		.cfi_endproc
 101              	.LFE5:
 102              		.size	Timer_SoftwareCapture, .-Timer_SoftwareCapture
 103              		.section	.text.Timer_ReadStatusRegister,"ax",%progbits
 104              		.align	2
 105              		.global	Timer_ReadStatusRegister
 106              		.thumb
 107              		.thumb_func
 108              		.type	Timer_ReadStatusRegister, %function
 109              	Timer_ReadStatusRegister:
 110              	.LFB6:
 309:Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer.c **** }
 312:Generated_Source\PSoC5/Timer.c **** 
 313:Generated_Source\PSoC5/Timer.c **** 
 314:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer.c **** *
 318:Generated_Source\PSoC5/Timer.c **** * Summary:
 319:Generated_Source\PSoC5/Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer.c **** *
 323:Generated_Source\PSoC5/Timer.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer.c **** *  void
 325:Generated_Source\PSoC5/Timer.c **** *
 326:Generated_Source\PSoC5/Timer.c **** * Return:
 327:Generated_Source\PSoC5/Timer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer.c **** *
 329:Generated_Source\PSoC5/Timer.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer.c **** *
 332:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer.c **** uint8   Timer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer.c **** {
 111              		.loc 1 334 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer.c ****     return (Timer_STATUS);
 116              		.loc 1 335 0
 117 0000 014B     		ldr	r3, .L10
 118 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer.c **** }
 119              		.loc 1 336 0
 120 0004 7047     		bx	lr
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 9


 121              	.L11:
 122 0006 00BF     		.align	2
 123              	.L10:
 124 0008 6C640040 		.word	1073767532
 125              		.cfi_endproc
 126              	.LFE6:
 127              		.size	Timer_ReadStatusRegister, .-Timer_ReadStatusRegister
 128              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 129              		.align	2
 130              		.global	Timer_ReadPeriod
 131              		.thumb
 132              		.thumb_func
 133              		.type	Timer_ReadPeriod, %function
 134              	Timer_ReadPeriod:
 135              	.LFB7:
 337:Generated_Source\PSoC5/Timer.c **** 
 338:Generated_Source\PSoC5/Timer.c **** 
 339:Generated_Source\PSoC5/Timer.c **** #if (!Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer.c **** 
 341:Generated_Source\PSoC5/Timer.c **** 
 342:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadControlRegister
 344:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer.c **** *
 346:Generated_Source\PSoC5/Timer.c **** * Summary:
 347:Generated_Source\PSoC5/Timer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer.c **** *
 349:Generated_Source\PSoC5/Timer.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer.c **** *  void
 351:Generated_Source\PSoC5/Timer.c **** *
 352:Generated_Source\PSoC5/Timer.c **** * Return:
 353:Generated_Source\PSoC5/Timer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer.c **** *
 355:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer.c **** {
 358:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer.c ****         return ((uint8)Timer_CONTROL);
 360:Generated_Source\PSoC5/Timer.c ****     #else
 361:Generated_Source\PSoC5/Timer.c ****         return (0);
 362:Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer.c **** }
 364:Generated_Source\PSoC5/Timer.c **** 
 365:Generated_Source\PSoC5/Timer.c **** 
 366:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteControlRegister
 368:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer.c **** *
 370:Generated_Source\PSoC5/Timer.c **** * Summary:
 371:Generated_Source\PSoC5/Timer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer.c **** *
 373:Generated_Source\PSoC5/Timer.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer.c **** *
 376:Generated_Source\PSoC5/Timer.c **** * Return:
 377:Generated_Source\PSoC5/Timer.c **** *
 378:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 10


 379:Generated_Source\PSoC5/Timer.c **** void Timer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer.c **** {
 381:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL = control;
 383:Generated_Source\PSoC5/Timer.c ****     #else
 384:Generated_Source\PSoC5/Timer.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer.c **** }
 387:Generated_Source\PSoC5/Timer.c **** 
 388:Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer.c **** 
 390:Generated_Source\PSoC5/Timer.c **** 
 391:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadPeriod
 393:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer.c **** *
 395:Generated_Source\PSoC5/Timer.c **** * Summary:
 396:Generated_Source\PSoC5/Timer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer.c **** *
 398:Generated_Source\PSoC5/Timer.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer.c **** *  void
 400:Generated_Source\PSoC5/Timer.c **** *
 401:Generated_Source\PSoC5/Timer.c **** * Return:
 402:Generated_Source\PSoC5/Timer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer.c **** *
 404:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer.c **** {
 136              		.loc 1 406 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer.c ****    #else
 410:Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 141              		.loc 1 410 0
 142 0000 014B     		ldr	r3, .L13
 143 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer.c **** }
 144              		.loc 1 412 0
 145 0004 80B2     		uxth	r0, r0
 146 0006 7047     		bx	lr
 147              	.L14:
 148              		.align	2
 149              	.L13:
 150 0008 58680040 		.word	1073768536
 151              		.cfi_endproc
 152              	.LFE7:
 153              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 154              		.section	.text.Timer_WritePeriod,"ax",%progbits
 155              		.align	2
 156              		.global	Timer_WritePeriod
 157              		.thumb
 158              		.thumb_func
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 11


 159              		.type	Timer_WritePeriod, %function
 160              	Timer_WritePeriod:
 161              	.LFB8:
 413:Generated_Source\PSoC5/Timer.c **** 
 414:Generated_Source\PSoC5/Timer.c **** 
 415:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WritePeriod
 417:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer.c **** *
 419:Generated_Source\PSoC5/Timer.c **** * Summary:
 420:Generated_Source\PSoC5/Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer.c **** *
 423:Generated_Source\PSoC5/Timer.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer.c **** *
 427:Generated_Source\PSoC5/Timer.c **** * Return:
 428:Generated_Source\PSoC5/Timer.c **** *  void
 429:Generated_Source\PSoC5/Timer.c **** *
 430:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer.c **** void Timer_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Timer.c **** {
 162              		.loc 1 432 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL1:
 433:Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer.c ****     #else
 437:Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period);
 168              		.loc 1 437 0
 169 0000 014B     		ldr	r3, .L16
 170 0002 1880     		strh	r0, [r3]	@ movhi
 171 0004 7047     		bx	lr
 172              	.L17:
 173 0006 00BF     		.align	2
 174              	.L16:
 175 0008 58680040 		.word	1073768536
 176              		.cfi_endproc
 177              	.LFE8:
 178              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 179              		.section	.text.Timer_ReadCapture,"ax",%progbits
 180              		.align	2
 181              		.global	Timer_ReadCapture
 182              		.thumb
 183              		.thumb_func
 184              		.type	Timer_ReadCapture, %function
 185              	Timer_ReadCapture:
 186              	.LFB9:
 438:Generated_Source\PSoC5/Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer.c **** }
 440:Generated_Source\PSoC5/Timer.c **** 
 441:Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 12


 442:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCapture
 444:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer.c **** *
 446:Generated_Source\PSoC5/Timer.c **** * Summary:
 447:Generated_Source\PSoC5/Timer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer.c **** *
 449:Generated_Source\PSoC5/Timer.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer.c **** *  void
 451:Generated_Source\PSoC5/Timer.c **** *
 452:Generated_Source\PSoC5/Timer.c **** * Return:
 453:Generated_Source\PSoC5/Timer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer.c **** *
 455:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer.c **** {
 187              		.loc 1 457 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer.c ****    #else
 461:Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 192              		.loc 1 461 0
 193 0000 014B     		ldr	r3, .L19
 194 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer.c **** }
 195              		.loc 1 463 0
 196 0004 80B2     		uxth	r0, r0
 197 0006 7047     		bx	lr
 198              	.L20:
 199              		.align	2
 200              	.L19:
 201 0008 98680040 		.word	1073768600
 202              		.cfi_endproc
 203              	.LFE9:
 204              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 205              		.section	.text.Timer_WriteCounter,"ax",%progbits
 206              		.align	2
 207              		.global	Timer_WriteCounter
 208              		.thumb
 209              		.thumb_func
 210              		.type	Timer_WriteCounter, %function
 211              	Timer_WriteCounter:
 212              	.LFB10:
 464:Generated_Source\PSoC5/Timer.c **** 
 465:Generated_Source\PSoC5/Timer.c **** 
 466:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteCounter
 468:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer.c **** *
 470:Generated_Source\PSoC5/Timer.c **** * Summary:
 471:Generated_Source\PSoC5/Timer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer.c **** *
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 13


 473:Generated_Source\PSoC5/Timer.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer.c **** *
 476:Generated_Source\PSoC5/Timer.c **** * Return:
 477:Generated_Source\PSoC5/Timer.c **** *  void
 478:Generated_Source\PSoC5/Timer.c **** *
 479:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer.c **** void Timer_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer.c **** {
 213              		.loc 1 481 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL2:
 482:Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer.c ****          */
 486:Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer.c ****         
 488:Generated_Source\PSoC5/Timer.c ****     #else
 489:Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, counter);
 219              		.loc 1 489 0
 220 0000 014B     		ldr	r3, .L22
 221 0002 1880     		strh	r0, [r3]	@ movhi
 222 0004 7047     		bx	lr
 223              	.L23:
 224 0006 00BF     		.align	2
 225              	.L22:
 226 0008 18680040 		.word	1073768472
 227              		.cfi_endproc
 228              	.LFE10:
 229              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 230              		.section	.text.Timer_ReadCounter,"ax",%progbits
 231              		.align	2
 232              		.global	Timer_ReadCounter
 233              		.thumb
 234              		.thumb_func
 235              		.type	Timer_ReadCounter, %function
 236              	Timer_ReadCounter:
 237              	.LFB11:
 490:Generated_Source\PSoC5/Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer.c **** }
 492:Generated_Source\PSoC5/Timer.c **** 
 493:Generated_Source\PSoC5/Timer.c **** 
 494:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCounter
 496:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer.c **** *
 498:Generated_Source\PSoC5/Timer.c **** * Summary:
 499:Generated_Source\PSoC5/Timer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer.c **** *
 501:Generated_Source\PSoC5/Timer.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer.c **** *  void
 503:Generated_Source\PSoC5/Timer.c **** *
 504:Generated_Source\PSoC5/Timer.c **** * Return:
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 14


 505:Generated_Source\PSoC5/Timer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer.c **** *
 507:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer.c **** {
 238              		.loc 1 509 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer.c ****     #else
 516:Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
 243              		.loc 1 516 0
 244 0000 024B     		ldr	r3, .L25
 245 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer.c **** 
 519:Generated_Source\PSoC5/Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer.c ****         return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer.c ****     #else
 523:Generated_Source\PSoC5/Timer.c ****         return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 246              		.loc 1 523 0
 247 0004 024B     		ldr	r3, .L25+4
 248 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/Timer.c ****     #endif /* (Timer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer.c **** }
 249              		.loc 1 525 0
 250 0008 80B2     		uxth	r0, r0
 251 000a 7047     		bx	lr
 252              	.L26:
 253              		.align	2
 254              	.L25:
 255 000c 0C640040 		.word	1073767436
 256 0010 98680040 		.word	1073768600
 257              		.cfi_endproc
 258              	.LFE11:
 259              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 260              		.section	.text.Timer_SetInterruptCount,"ax",%progbits
 261              		.align	2
 262              		.global	Timer_SetInterruptCount
 263              		.thumb
 264              		.thumb_func
 265              		.type	Timer_SetInterruptCount, %function
 266              	Timer_SetInterruptCount:
 267              	.LFB12:
 526:Generated_Source\PSoC5/Timer.c **** 
 527:Generated_Source\PSoC5/Timer.c **** 
 528:Generated_Source\PSoC5/Timer.c **** #if(!Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer.c **** 
 530:Generated_Source\PSoC5/Timer.c ****     
 531:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 15


 532:Generated_Source\PSoC5/Timer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer.c **** 
 536:Generated_Source\PSoC5/Timer.c **** 
 537:Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer.c **** 
 539:Generated_Source\PSoC5/Timer.c **** 
 540:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureMode
 542:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer.c **** *
 544:Generated_Source\PSoC5/Timer.c **** * Summary:
 545:Generated_Source\PSoC5/Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer.c **** *
 547:Generated_Source\PSoC5/Timer.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer.c **** *  #define Timer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer.c ****  identifiers
 556:Generated_Source\PSoC5/Timer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer.c **** *
 562:Generated_Source\PSoC5/Timer.c **** * Return:
 563:Generated_Source\PSoC5/Timer.c **** *  void
 564:Generated_Source\PSoC5/Timer.c **** *
 565:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer.c **** {
 568:Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer.c ****     captureMode &= (Timer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer.c **** 
 572:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer.c **** 
 576:Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer.c **** }
 580:Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer.c **** 
 582:Generated_Source\PSoC5/Timer.c **** 
 583:Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer.c **** 
 585:Generated_Source\PSoC5/Timer.c **** 
 586:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetTriggerMode
 588:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 16


 589:Generated_Source\PSoC5/Timer.c **** *
 590:Generated_Source\PSoC5/Timer.c **** * Summary:
 591:Generated_Source\PSoC5/Timer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer.c **** *
 593:Generated_Source\PSoC5/Timer.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer.c **** *
 601:Generated_Source\PSoC5/Timer.c **** * Return:
 602:Generated_Source\PSoC5/Timer.c **** *  void
 603:Generated_Source\PSoC5/Timer.c **** *
 604:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer.c **** void Timer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer.c **** {
 607:Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer.c ****     triggerMode &= Timer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer.c **** 
 610:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/Timer.c ****     
 612:Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer.c **** 
 615:Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= (triggerMode | Timer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer.c **** }
 619:Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer.c **** 
 621:Generated_Source\PSoC5/Timer.c **** #if (Timer_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer.c **** 
 623:Generated_Source\PSoC5/Timer.c **** 
 624:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_EnableTrigger
 626:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer.c **** *
 628:Generated_Source\PSoC5/Timer.c **** * Summary:
 629:Generated_Source\PSoC5/Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer.c **** *
 631:Generated_Source\PSoC5/Timer.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer.c **** *  void
 633:Generated_Source\PSoC5/Timer.c **** *
 634:Generated_Source\PSoC5/Timer.c **** * Return:
 635:Generated_Source\PSoC5/Timer.c **** *  void
 636:Generated_Source\PSoC5/Timer.c **** *
 637:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer.c **** void Timer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer.c **** {
 640:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer.c **** }
 644:Generated_Source\PSoC5/Timer.c **** 
 645:Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 17


 646:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_DisableTrigger
 648:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer.c **** *
 650:Generated_Source\PSoC5/Timer.c **** * Summary:
 651:Generated_Source\PSoC5/Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer.c **** *
 653:Generated_Source\PSoC5/Timer.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer.c **** *  void
 655:Generated_Source\PSoC5/Timer.c **** *
 656:Generated_Source\PSoC5/Timer.c **** * Return:
 657:Generated_Source\PSoC5/Timer.c **** *  void
 658:Generated_Source\PSoC5/Timer.c **** *
 659:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer.c **** void Timer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer.c **** {
 662:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed */
 663:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer.c **** }
 666:Generated_Source\PSoC5/Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer.c **** 
 668:Generated_Source\PSoC5/Timer.c **** #if(Timer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer.c **** 
 670:Generated_Source\PSoC5/Timer.c **** 
 671:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptCount
 673:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer.c **** *
 675:Generated_Source\PSoC5/Timer.c **** * Summary:
 676:Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer.c **** *
 678:Generated_Source\PSoC5/Timer.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer.c **** *
 684:Generated_Source\PSoC5/Timer.c **** * Return:
 685:Generated_Source\PSoC5/Timer.c **** *  void
 686:Generated_Source\PSoC5/Timer.c **** *
 687:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer.c **** {
 268              		.loc 1 689 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273              	.LVL3:
 274 0000 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE12:
 277              		.size	Timer_SetInterruptCount, .-Timer_SetInterruptCount
 278 0002 00BF     		.section	.text.Timer_ClearFIFO,"ax",%progbits
 279              		.align	2
 280              		.global	Timer_ClearFIFO
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 18


 281              		.thumb
 282              		.thumb_func
 283              		.type	Timer_ClearFIFO, %function
 284              	Timer_ClearFIFO:
 285              	.LFB13:
 690:Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer.c ****     interruptCount &= Timer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer.c **** 
 693:Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer.c **** }
 700:Generated_Source\PSoC5/Timer.c **** #endif /* Timer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer.c **** 
 702:Generated_Source\PSoC5/Timer.c **** 
 703:Generated_Source\PSoC5/Timer.c **** #if (Timer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer.c **** 
 705:Generated_Source\PSoC5/Timer.c **** 
 706:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureCount
 708:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer.c **** *
 710:Generated_Source\PSoC5/Timer.c **** * Summary:
 711:Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer.c **** *
 713:Generated_Source\PSoC5/Timer.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer.c **** *                captures.
 717:Generated_Source\PSoC5/Timer.c **** *
 718:Generated_Source\PSoC5/Timer.c **** * Return:
 719:Generated_Source\PSoC5/Timer.c **** *  void
 720:Generated_Source\PSoC5/Timer.c **** *
 721:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer.c **** {
 724:Generated_Source\PSoC5/Timer.c ****     Timer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer.c **** }
 726:Generated_Source\PSoC5/Timer.c **** 
 727:Generated_Source\PSoC5/Timer.c **** 
 728:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer.c **** *
 732:Generated_Source\PSoC5/Timer.c **** * Summary:
 733:Generated_Source\PSoC5/Timer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer.c **** *
 735:Generated_Source\PSoC5/Timer.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer.c **** *  void
 737:Generated_Source\PSoC5/Timer.c **** *
 738:Generated_Source\PSoC5/Timer.c **** * Return:
 739:Generated_Source\PSoC5/Timer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer.c **** *
 741:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 19


 742:Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer.c **** {
 744:Generated_Source\PSoC5/Timer.c ****     return ((uint8)Timer_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer.c **** }
 746:Generated_Source\PSoC5/Timer.c **** #endif /* Timer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer.c **** 
 748:Generated_Source\PSoC5/Timer.c **** 
 749:Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ClearFIFO
 751:Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer.c **** *
 753:Generated_Source\PSoC5/Timer.c **** * Summary:
 754:Generated_Source\PSoC5/Timer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer.c **** *
 756:Generated_Source\PSoC5/Timer.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer.c **** *  void
 758:Generated_Source\PSoC5/Timer.c **** *
 759:Generated_Source\PSoC5/Timer.c **** * Return:
 760:Generated_Source\PSoC5/Timer.c **** *  void
 761:Generated_Source\PSoC5/Timer.c **** *
 762:Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer.c **** void Timer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer.c **** {
 286              		.loc 1 764 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		.loc 1 764 0
 291 0000 08B5     		push	{r3, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 295              		.loc 1 765 0
 296 0002 01E0     		b	.L29
 297              	.L30:
 766:Generated_Source\PSoC5/Timer.c ****     {
 767:Generated_Source\PSoC5/Timer.c ****         (void)Timer_ReadCapture();
 298              		.loc 1 767 0
 299 0004 FFF7FEFF 		bl	Timer_ReadCapture
 300              	.LVL4:
 301              	.L29:
 765:Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 302              		.loc 1 765 0
 303 0008 FFF7FEFF 		bl	Timer_ReadStatusRegister
 304              	.LVL5:
 305 000c 10F0080F 		tst	r0, #8
 306 0010 F8D1     		bne	.L30
 768:Generated_Source\PSoC5/Timer.c ****     }
 769:Generated_Source\PSoC5/Timer.c **** }
 307              		.loc 1 769 0
 308 0012 08BD     		pop	{r3, pc}
 309              		.cfi_endproc
 310              	.LFE13:
 311              		.size	Timer_ClearFIFO, .-Timer_ClearFIFO
 312              		.section	.text.Timer_Init,"ax",%progbits
 313              		.align	2
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 20


 314              		.global	Timer_Init
 315              		.thumb
 316              		.thumb_func
 317              		.type	Timer_Init, %function
 318              	Timer_Init:
 319              	.LFB0:
  44:Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
 320              		.loc 1 44 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 328              		.loc 1 118 0
 329 0002 45F61730 		movw	r0, #23319
 330 0006 FFF7FEFF 		bl	Timer_WritePeriod
 331              	.LVL6:
 119:Generated_Source\PSoC5/Timer.c **** 
 332              		.loc 1 119 0
 333 000a 45F61730 		movw	r0, #23319
 334 000e FFF7FEFF 		bl	Timer_WriteCounter
 335              	.LVL7:
 142:Generated_Source\PSoC5/Timer.c **** 
 336              		.loc 1 142 0
 337 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 338              	.LVL8:
 145:Generated_Source\PSoC5/Timer.c **** 
 339              		.loc 1 145 0
 340 0016 064A     		ldr	r2, .L34
 341 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 001a 43F01003 		orr	r3, r3, #16
 343 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer.c **** 
 344              		.loc 1 148 0
 345 0020 FFF7FEFF 		bl	CyExitCriticalSection
 346              	.LVL9:
 159:Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 347              		.loc 1 159 0
 348 0024 FFF7FEFF 		bl	Timer_ClearFIFO
 349              	.LVL10:
 162:Generated_Source\PSoC5/Timer.c **** }
 350              		.loc 1 162 0
 351 0028 0220     		movs	r0, #2
 352 002a FFF7FEFF 		bl	Timer_SetInterruptMode
 353              	.LVL11:
 354 002e 08BD     		pop	{r3, pc}
 355              	.L35:
 356              		.align	2
 357              	.L34:
 358 0030 9C640040 		.word	1073767580
 359              		.cfi_endproc
 360              	.LFE0:
 361              		.size	Timer_Init, .-Timer_Init
 362              		.section	.text.Timer_Start,"ax",%progbits
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 21


 363              		.align	2
 364              		.global	Timer_Start
 365              		.thumb
 366              		.thumb_func
 367              		.type	Timer_Start, %function
 368              	Timer_Start:
 369              	.LFB2:
 216:Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 370              		.loc 1 216 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer.c ****     {
 378              		.loc 1 217 0
 379 0002 044B     		ldr	r3, .L39
 380 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0006 23B9     		cbnz	r3, .L36
 219:Generated_Source\PSoC5/Timer.c **** 
 382              		.loc 1 219 0
 383 0008 FFF7FEFF 		bl	Timer_Init
 384              	.LVL12:
 221:Generated_Source\PSoC5/Timer.c ****     }
 385              		.loc 1 221 0
 386 000c 0122     		movs	r2, #1
 387 000e 014B     		ldr	r3, .L39
 388 0010 1A70     		strb	r2, [r3]
 389              	.L36:
 390 0012 08BD     		pop	{r3, pc}
 391              	.L40:
 392              		.align	2
 393              	.L39:
 394 0014 00000000 		.word	.LANCHOR0
 395              		.cfi_endproc
 396              	.LFE2:
 397              		.size	Timer_Start, .-Timer_Start
 398              		.global	Timer_initVar
 399              		.bss
 400              		.set	.LANCHOR0,. + 0
 401              		.type	Timer_initVar, %object
 402              		.size	Timer_initVar, 1
 403              	Timer_initVar:
 404 0000 00       		.space	1
 405              		.text
 406              	.Letext0:
 407              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 408              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 409              		.section	.debug_info,"",%progbits
 410              	.Ldebug_info0:
 411 0000 CF020000 		.4byte	0x2cf
 412 0004 0400     		.2byte	0x4
 413 0006 00000000 		.4byte	.Ldebug_abbrev0
 414 000a 04       		.byte	0x4
 415 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 22


 416 000c B5010000 		.4byte	.LASF38
 417 0010 0C       		.byte	0xc
 418 0011 73000000 		.4byte	.LASF39
 419 0015 84020000 		.4byte	.LASF40
 420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 421 001d 00000000 		.4byte	0
 422 0021 00000000 		.4byte	.Ldebug_line0
 423 0025 02       		.uleb128 0x2
 424 0026 01       		.byte	0x1
 425 0027 06       		.byte	0x6
 426 0028 EE020000 		.4byte	.LASF0
 427 002c 02       		.uleb128 0x2
 428 002d 01       		.byte	0x1
 429 002e 08       		.byte	0x8
 430 002f D1000000 		.4byte	.LASF1
 431 0033 02       		.uleb128 0x2
 432 0034 02       		.byte	0x2
 433 0035 05       		.byte	0x5
 434 0036 68020000 		.4byte	.LASF2
 435 003a 02       		.uleb128 0x2
 436 003b 02       		.byte	0x2
 437 003c 07       		.byte	0x7
 438 003d 38000000 		.4byte	.LASF3
 439 0041 02       		.uleb128 0x2
 440 0042 04       		.byte	0x4
 441 0043 05       		.byte	0x5
 442 0044 C9020000 		.4byte	.LASF4
 443 0048 02       		.uleb128 0x2
 444 0049 04       		.byte	0x4
 445 004a 07       		.byte	0x7
 446 004b 69010000 		.4byte	.LASF5
 447 004f 02       		.uleb128 0x2
 448 0050 08       		.byte	0x8
 449 0051 05       		.byte	0x5
 450 0052 4C020000 		.4byte	.LASF6
 451 0056 02       		.uleb128 0x2
 452 0057 08       		.byte	0x8
 453 0058 07       		.byte	0x7
 454 0059 BA000000 		.4byte	.LASF7
 455 005d 03       		.uleb128 0x3
 456 005e 04       		.byte	0x4
 457 005f 05       		.byte	0x5
 458 0060 696E7400 		.ascii	"int\000"
 459 0064 02       		.uleb128 0x2
 460 0065 04       		.byte	0x4
 461 0066 07       		.byte	0x7
 462 0067 7B010000 		.4byte	.LASF8
 463 006b 04       		.uleb128 0x4
 464 006c 22010000 		.4byte	.LASF9
 465 0070 02       		.byte	0x2
 466 0071 9201     		.2byte	0x192
 467 0073 2C000000 		.4byte	0x2c
 468 0077 04       		.uleb128 0x4
 469 0078 56010000 		.4byte	.LASF10
 470 007c 02       		.byte	0x2
 471 007d 9301     		.2byte	0x193
 472 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 23


 473 0083 02       		.uleb128 0x2
 474 0084 04       		.byte	0x4
 475 0085 04       		.byte	0x4
 476 0086 AC000000 		.4byte	.LASF11
 477 008a 02       		.uleb128 0x2
 478 008b 08       		.byte	0x8
 479 008c 04       		.byte	0x4
 480 008d 3E010000 		.4byte	.LASF12
 481 0091 02       		.uleb128 0x2
 482 0092 01       		.byte	0x1
 483 0093 08       		.byte	0x8
 484 0094 D2020000 		.4byte	.LASF13
 485 0098 04       		.uleb128 0x4
 486 0099 06010000 		.4byte	.LASF14
 487 009d 02       		.byte	0x2
 488 009e 3C02     		.2byte	0x23c
 489 00a0 A4000000 		.4byte	0xa4
 490 00a4 05       		.uleb128 0x5
 491 00a5 6B000000 		.4byte	0x6b
 492 00a9 04       		.uleb128 0x4
 493 00aa 00000000 		.4byte	.LASF15
 494 00ae 02       		.byte	0x2
 495 00af 3D02     		.2byte	0x23d
 496 00b1 B5000000 		.4byte	0xb5
 497 00b5 05       		.uleb128 0x5
 498 00b6 77000000 		.4byte	0x77
 499 00ba 02       		.uleb128 0x2
 500 00bb 08       		.byte	0x8
 501 00bc 04       		.byte	0x4
 502 00bd D7020000 		.4byte	.LASF16
 503 00c1 02       		.uleb128 0x2
 504 00c2 04       		.byte	0x4
 505 00c3 07       		.byte	0x7
 506 00c4 43020000 		.4byte	.LASF17
 507 00c8 06       		.uleb128 0x6
 508 00c9 08030000 		.4byte	.LASF18
 509 00cd 01       		.byte	0x1
 510 00ce B4       		.byte	0xb4
 511 00cf 00000000 		.4byte	.LFB1
 512 00d3 02000000 		.4byte	.LFE1-.LFB1
 513 00d7 01       		.uleb128 0x1
 514 00d8 9C       		.byte	0x9c
 515 00d9 06       		.uleb128 0x6
 516 00da 92000000 		.4byte	.LASF19
 517 00de 01       		.byte	0x1
 518 00df F7       		.byte	0xf7
 519 00e0 00000000 		.4byte	.LFB3
 520 00e4 02000000 		.4byte	.LFE3-.LFB3
 521 00e8 01       		.uleb128 0x1
 522 00e9 9C       		.byte	0x9c
 523 00ea 07       		.uleb128 0x7
 524 00eb 0B010000 		.4byte	.LASF23
 525 00ef 01       		.byte	0x1
 526 00f0 1701     		.2byte	0x117
 527 00f2 00000000 		.4byte	.LFB4
 528 00f6 0C000000 		.4byte	.LFE4-.LFB4
 529 00fa 01       		.uleb128 0x1
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 24


 530 00fb 9C       		.byte	0x9c
 531 00fc 0F010000 		.4byte	0x10f
 532 0100 08       		.uleb128 0x8
 533 0101 5A020000 		.4byte	.LASF25
 534 0105 01       		.byte	0x1
 535 0106 1701     		.2byte	0x117
 536 0108 6B000000 		.4byte	0x6b
 537 010c 01       		.uleb128 0x1
 538 010d 50       		.byte	0x50
 539 010e 00       		.byte	0
 540 010f 09       		.uleb128 0x9
 541 0110 28010000 		.4byte	.LASF20
 542 0114 01       		.byte	0x1
 543 0115 2E01     		.2byte	0x12e
 544 0117 00000000 		.4byte	.LFB5
 545 011b 0C000000 		.4byte	.LFE5-.LFB5
 546 011f 01       		.uleb128 0x1
 547 0120 9C       		.byte	0x9c
 548 0121 0A       		.uleb128 0xa
 549 0122 06000000 		.4byte	.LASF21
 550 0126 01       		.byte	0x1
 551 0127 4D01     		.2byte	0x14d
 552 0129 6B000000 		.4byte	0x6b
 553 012d 00000000 		.4byte	.LFB6
 554 0131 0C000000 		.4byte	.LFE6-.LFB6
 555 0135 01       		.uleb128 0x1
 556 0136 9C       		.byte	0x9c
 557 0137 0A       		.uleb128 0xa
 558 0138 45010000 		.4byte	.LASF22
 559 013c 01       		.byte	0x1
 560 013d 9501     		.2byte	0x195
 561 013f 77000000 		.4byte	0x77
 562 0143 00000000 		.4byte	.LFB7
 563 0147 0C000000 		.4byte	.LFE7-.LFB7
 564 014b 01       		.uleb128 0x1
 565 014c 9C       		.byte	0x9c
 566 014d 07       		.uleb128 0x7
 567 014e F4000000 		.4byte	.LASF24
 568 0152 01       		.byte	0x1
 569 0153 AF01     		.2byte	0x1af
 570 0155 00000000 		.4byte	.LFB8
 571 0159 0C000000 		.4byte	.LFE8-.LFB8
 572 015d 01       		.uleb128 0x1
 573 015e 9C       		.byte	0x9c
 574 015f 72010000 		.4byte	0x172
 575 0163 08       		.uleb128 0x8
 576 0164 1F000000 		.4byte	.LASF26
 577 0168 01       		.byte	0x1
 578 0169 AF01     		.2byte	0x1af
 579 016b 77000000 		.4byte	0x77
 580 016f 01       		.uleb128 0x1
 581 0170 50       		.byte	0x50
 582 0171 00       		.byte	0
 583 0172 0A       		.uleb128 0xa
 584 0173 72020000 		.4byte	.LASF27
 585 0177 01       		.byte	0x1
 586 0178 C801     		.2byte	0x1c8
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 25


 587 017a 77000000 		.4byte	0x77
 588 017e 00000000 		.4byte	.LFB9
 589 0182 0C000000 		.4byte	.LFE9-.LFB9
 590 0186 01       		.uleb128 0x1
 591 0187 9C       		.byte	0x9c
 592 0188 07       		.uleb128 0x7
 593 0189 B6020000 		.4byte	.LASF28
 594 018d 01       		.byte	0x1
 595 018e E001     		.2byte	0x1e0
 596 0190 00000000 		.4byte	.LFB10
 597 0194 0C000000 		.4byte	.LFE10-.LFB10
 598 0198 01       		.uleb128 0x1
 599 0199 9C       		.byte	0x9c
 600 019a AD010000 		.4byte	0x1ad
 601 019e 08       		.uleb128 0x8
 602 019f B2000000 		.4byte	.LASF29
 603 01a3 01       		.byte	0x1
 604 01a4 E001     		.2byte	0x1e0
 605 01a6 77000000 		.4byte	0x77
 606 01aa 01       		.uleb128 0x1
 607 01ab 50       		.byte	0x50
 608 01ac 00       		.byte	0
 609 01ad 0A       		.uleb128 0xa
 610 01ae 26000000 		.4byte	.LASF30
 611 01b2 01       		.byte	0x1
 612 01b3 FC01     		.2byte	0x1fc
 613 01b5 77000000 		.4byte	0x77
 614 01b9 00000000 		.4byte	.LFB11
 615 01bd 14000000 		.4byte	.LFE11-.LFB11
 616 01c1 01       		.uleb128 0x1
 617 01c2 9C       		.byte	0x9c
 618 01c3 07       		.uleb128 0x7
 619 01c4 4B000000 		.4byte	.LASF31
 620 01c8 01       		.byte	0x1
 621 01c9 B002     		.2byte	0x2b0
 622 01cb 00000000 		.4byte	.LFB12
 623 01cf 02000000 		.4byte	.LFE12-.LFB12
 624 01d3 01       		.uleb128 0x1
 625 01d4 9C       		.byte	0x9c
 626 01d5 EA010000 		.4byte	0x1ea
 627 01d9 0B       		.uleb128 0xb
 628 01da 9D000000 		.4byte	.LASF32
 629 01de 01       		.byte	0x1
 630 01df B002     		.2byte	0x2b0
 631 01e1 6B000000 		.4byte	0x6b
 632 01e5 00000000 		.4byte	.LLST0
 633 01e9 00       		.byte	0
 634 01ea 07       		.uleb128 0x7
 635 01eb 63000000 		.4byte	.LASF33
 636 01ef 01       		.byte	0x1
 637 01f0 FB02     		.2byte	0x2fb
 638 01f2 00000000 		.4byte	.LFB13
 639 01f6 14000000 		.4byte	.LFE13-.LFB13
 640 01fa 01       		.uleb128 0x1
 641 01fb 9C       		.byte	0x9c
 642 01fc 13020000 		.4byte	0x213
 643 0200 0C       		.uleb128 0xc
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 26


 644 0201 08000000 		.4byte	.LVL4
 645 0205 72010000 		.4byte	0x172
 646 0209 0C       		.uleb128 0xc
 647 020a 0C000000 		.4byte	.LVL5
 648 020e 21010000 		.4byte	0x121
 649 0212 00       		.byte	0
 650 0213 0D       		.uleb128 0xd
 651 0214 E3020000 		.4byte	.LASF34
 652 0218 01       		.byte	0x1
 653 0219 2B       		.byte	0x2b
 654 021a 00000000 		.4byte	.LFB0
 655 021e 34000000 		.4byte	.LFE0-.LFB0
 656 0222 01       		.uleb128 0x1
 657 0223 9C       		.byte	0x9c
 658 0224 8C020000 		.4byte	0x28c
 659 0228 0E       		.uleb128 0xe
 660 0229 DF000000 		.4byte	.LASF41
 661 022d 01       		.byte	0x1
 662 022e 2F       		.byte	0x2f
 663 022f 6B000000 		.4byte	0x6b
 664 0233 23000000 		.4byte	.LLST1
 665 0237 0F       		.uleb128 0xf
 666 0238 0A000000 		.4byte	.LVL6
 667 023c 4D010000 		.4byte	0x14d
 668 0240 4C020000 		.4byte	0x24c
 669 0244 10       		.uleb128 0x10
 670 0245 01       		.uleb128 0x1
 671 0246 50       		.byte	0x50
 672 0247 03       		.uleb128 0x3
 673 0248 0A       		.byte	0xa
 674 0249 175B     		.2byte	0x5b17
 675 024b 00       		.byte	0
 676 024c 0F       		.uleb128 0xf
 677 024d 12000000 		.4byte	.LVL7
 678 0251 88010000 		.4byte	0x188
 679 0255 61020000 		.4byte	0x261
 680 0259 10       		.uleb128 0x10
 681 025a 01       		.uleb128 0x1
 682 025b 50       		.byte	0x50
 683 025c 03       		.uleb128 0x3
 684 025d 0A       		.byte	0xa
 685 025e 175B     		.2byte	0x5b17
 686 0260 00       		.byte	0
 687 0261 0C       		.uleb128 0xc
 688 0262 16000000 		.4byte	.LVL8
 689 0266 BC020000 		.4byte	0x2bc
 690 026a 0C       		.uleb128 0xc
 691 026b 24000000 		.4byte	.LVL9
 692 026f C7020000 		.4byte	0x2c7
 693 0273 0C       		.uleb128 0xc
 694 0274 28000000 		.4byte	.LVL10
 695 0278 EA010000 		.4byte	0x1ea
 696 027c 11       		.uleb128 0x11
 697 027d 2E000000 		.4byte	.LVL11
 698 0281 EA000000 		.4byte	0xea
 699 0285 10       		.uleb128 0x10
 700 0286 01       		.uleb128 0x1
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 27


 701 0287 50       		.byte	0x50
 702 0288 01       		.uleb128 0x1
 703 0289 32       		.byte	0x32
 704 028a 00       		.byte	0
 705 028b 00       		.byte	0
 706 028c 0D       		.uleb128 0xd
 707 028d 5D010000 		.4byte	.LASF35
 708 0291 01       		.byte	0x1
 709 0292 D7       		.byte	0xd7
 710 0293 00000000 		.4byte	.LFB2
 711 0297 18000000 		.4byte	.LFE2-.LFB2
 712 029b 01       		.uleb128 0x1
 713 029c 9C       		.byte	0x9c
 714 029d AB020000 		.4byte	0x2ab
 715 02a1 0C       		.uleb128 0xc
 716 02a2 0C000000 		.4byte	.LVL12
 717 02a6 13020000 		.4byte	0x213
 718 02aa 00       		.byte	0
 719 02ab 12       		.uleb128 0x12
 720 02ac FA020000 		.4byte	.LASF42
 721 02b0 01       		.byte	0x1
 722 02b1 1A       		.byte	0x1a
 723 02b2 6B000000 		.4byte	0x6b
 724 02b6 05       		.uleb128 0x5
 725 02b7 03       		.byte	0x3
 726 02b8 00000000 		.4byte	Timer_initVar
 727 02bc 13       		.uleb128 0x13
 728 02bd 9E010000 		.4byte	.LASF36
 729 02c1 9E010000 		.4byte	.LASF36
 730 02c5 03       		.byte	0x3
 731 02c6 7D       		.byte	0x7d
 732 02c7 13       		.uleb128 0x13
 733 02c8 88010000 		.4byte	.LASF37
 734 02cc 88010000 		.4byte	.LASF37
 735 02d0 03       		.byte	0x3
 736 02d1 7E       		.byte	0x7e
 737 02d2 00       		.byte	0
 738              		.section	.debug_abbrev,"",%progbits
 739              	.Ldebug_abbrev0:
 740 0000 01       		.uleb128 0x1
 741 0001 11       		.uleb128 0x11
 742 0002 01       		.byte	0x1
 743 0003 25       		.uleb128 0x25
 744 0004 0E       		.uleb128 0xe
 745 0005 13       		.uleb128 0x13
 746 0006 0B       		.uleb128 0xb
 747 0007 03       		.uleb128 0x3
 748 0008 0E       		.uleb128 0xe
 749 0009 1B       		.uleb128 0x1b
 750 000a 0E       		.uleb128 0xe
 751 000b 55       		.uleb128 0x55
 752 000c 17       		.uleb128 0x17
 753 000d 11       		.uleb128 0x11
 754 000e 01       		.uleb128 0x1
 755 000f 10       		.uleb128 0x10
 756 0010 17       		.uleb128 0x17
 757 0011 00       		.byte	0
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 28


 758 0012 00       		.byte	0
 759 0013 02       		.uleb128 0x2
 760 0014 24       		.uleb128 0x24
 761 0015 00       		.byte	0
 762 0016 0B       		.uleb128 0xb
 763 0017 0B       		.uleb128 0xb
 764 0018 3E       		.uleb128 0x3e
 765 0019 0B       		.uleb128 0xb
 766 001a 03       		.uleb128 0x3
 767 001b 0E       		.uleb128 0xe
 768 001c 00       		.byte	0
 769 001d 00       		.byte	0
 770 001e 03       		.uleb128 0x3
 771 001f 24       		.uleb128 0x24
 772 0020 00       		.byte	0
 773 0021 0B       		.uleb128 0xb
 774 0022 0B       		.uleb128 0xb
 775 0023 3E       		.uleb128 0x3e
 776 0024 0B       		.uleb128 0xb
 777 0025 03       		.uleb128 0x3
 778 0026 08       		.uleb128 0x8
 779 0027 00       		.byte	0
 780 0028 00       		.byte	0
 781 0029 04       		.uleb128 0x4
 782 002a 16       		.uleb128 0x16
 783 002b 00       		.byte	0
 784 002c 03       		.uleb128 0x3
 785 002d 0E       		.uleb128 0xe
 786 002e 3A       		.uleb128 0x3a
 787 002f 0B       		.uleb128 0xb
 788 0030 3B       		.uleb128 0x3b
 789 0031 05       		.uleb128 0x5
 790 0032 49       		.uleb128 0x49
 791 0033 13       		.uleb128 0x13
 792 0034 00       		.byte	0
 793 0035 00       		.byte	0
 794 0036 05       		.uleb128 0x5
 795 0037 35       		.uleb128 0x35
 796 0038 00       		.byte	0
 797 0039 49       		.uleb128 0x49
 798 003a 13       		.uleb128 0x13
 799 003b 00       		.byte	0
 800 003c 00       		.byte	0
 801 003d 06       		.uleb128 0x6
 802 003e 2E       		.uleb128 0x2e
 803 003f 00       		.byte	0
 804 0040 3F       		.uleb128 0x3f
 805 0041 19       		.uleb128 0x19
 806 0042 03       		.uleb128 0x3
 807 0043 0E       		.uleb128 0xe
 808 0044 3A       		.uleb128 0x3a
 809 0045 0B       		.uleb128 0xb
 810 0046 3B       		.uleb128 0x3b
 811 0047 0B       		.uleb128 0xb
 812 0048 27       		.uleb128 0x27
 813 0049 19       		.uleb128 0x19
 814 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 29


 815 004b 01       		.uleb128 0x1
 816 004c 12       		.uleb128 0x12
 817 004d 06       		.uleb128 0x6
 818 004e 40       		.uleb128 0x40
 819 004f 18       		.uleb128 0x18
 820 0050 9742     		.uleb128 0x2117
 821 0052 19       		.uleb128 0x19
 822 0053 00       		.byte	0
 823 0054 00       		.byte	0
 824 0055 07       		.uleb128 0x7
 825 0056 2E       		.uleb128 0x2e
 826 0057 01       		.byte	0x1
 827 0058 3F       		.uleb128 0x3f
 828 0059 19       		.uleb128 0x19
 829 005a 03       		.uleb128 0x3
 830 005b 0E       		.uleb128 0xe
 831 005c 3A       		.uleb128 0x3a
 832 005d 0B       		.uleb128 0xb
 833 005e 3B       		.uleb128 0x3b
 834 005f 05       		.uleb128 0x5
 835 0060 27       		.uleb128 0x27
 836 0061 19       		.uleb128 0x19
 837 0062 11       		.uleb128 0x11
 838 0063 01       		.uleb128 0x1
 839 0064 12       		.uleb128 0x12
 840 0065 06       		.uleb128 0x6
 841 0066 40       		.uleb128 0x40
 842 0067 18       		.uleb128 0x18
 843 0068 9742     		.uleb128 0x2117
 844 006a 19       		.uleb128 0x19
 845 006b 01       		.uleb128 0x1
 846 006c 13       		.uleb128 0x13
 847 006d 00       		.byte	0
 848 006e 00       		.byte	0
 849 006f 08       		.uleb128 0x8
 850 0070 05       		.uleb128 0x5
 851 0071 00       		.byte	0
 852 0072 03       		.uleb128 0x3
 853 0073 0E       		.uleb128 0xe
 854 0074 3A       		.uleb128 0x3a
 855 0075 0B       		.uleb128 0xb
 856 0076 3B       		.uleb128 0x3b
 857 0077 05       		.uleb128 0x5
 858 0078 49       		.uleb128 0x49
 859 0079 13       		.uleb128 0x13
 860 007a 02       		.uleb128 0x2
 861 007b 18       		.uleb128 0x18
 862 007c 00       		.byte	0
 863 007d 00       		.byte	0
 864 007e 09       		.uleb128 0x9
 865 007f 2E       		.uleb128 0x2e
 866 0080 00       		.byte	0
 867 0081 3F       		.uleb128 0x3f
 868 0082 19       		.uleb128 0x19
 869 0083 03       		.uleb128 0x3
 870 0084 0E       		.uleb128 0xe
 871 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 30


 872 0086 0B       		.uleb128 0xb
 873 0087 3B       		.uleb128 0x3b
 874 0088 05       		.uleb128 0x5
 875 0089 27       		.uleb128 0x27
 876 008a 19       		.uleb128 0x19
 877 008b 11       		.uleb128 0x11
 878 008c 01       		.uleb128 0x1
 879 008d 12       		.uleb128 0x12
 880 008e 06       		.uleb128 0x6
 881 008f 40       		.uleb128 0x40
 882 0090 18       		.uleb128 0x18
 883 0091 9742     		.uleb128 0x2117
 884 0093 19       		.uleb128 0x19
 885 0094 00       		.byte	0
 886 0095 00       		.byte	0
 887 0096 0A       		.uleb128 0xa
 888 0097 2E       		.uleb128 0x2e
 889 0098 00       		.byte	0
 890 0099 3F       		.uleb128 0x3f
 891 009a 19       		.uleb128 0x19
 892 009b 03       		.uleb128 0x3
 893 009c 0E       		.uleb128 0xe
 894 009d 3A       		.uleb128 0x3a
 895 009e 0B       		.uleb128 0xb
 896 009f 3B       		.uleb128 0x3b
 897 00a0 05       		.uleb128 0x5
 898 00a1 27       		.uleb128 0x27
 899 00a2 19       		.uleb128 0x19
 900 00a3 49       		.uleb128 0x49
 901 00a4 13       		.uleb128 0x13
 902 00a5 11       		.uleb128 0x11
 903 00a6 01       		.uleb128 0x1
 904 00a7 12       		.uleb128 0x12
 905 00a8 06       		.uleb128 0x6
 906 00a9 40       		.uleb128 0x40
 907 00aa 18       		.uleb128 0x18
 908 00ab 9742     		.uleb128 0x2117
 909 00ad 19       		.uleb128 0x19
 910 00ae 00       		.byte	0
 911 00af 00       		.byte	0
 912 00b0 0B       		.uleb128 0xb
 913 00b1 05       		.uleb128 0x5
 914 00b2 00       		.byte	0
 915 00b3 03       		.uleb128 0x3
 916 00b4 0E       		.uleb128 0xe
 917 00b5 3A       		.uleb128 0x3a
 918 00b6 0B       		.uleb128 0xb
 919 00b7 3B       		.uleb128 0x3b
 920 00b8 05       		.uleb128 0x5
 921 00b9 49       		.uleb128 0x49
 922 00ba 13       		.uleb128 0x13
 923 00bb 02       		.uleb128 0x2
 924 00bc 17       		.uleb128 0x17
 925 00bd 00       		.byte	0
 926 00be 00       		.byte	0
 927 00bf 0C       		.uleb128 0xc
 928 00c0 898201   		.uleb128 0x4109
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 31


 929 00c3 00       		.byte	0
 930 00c4 11       		.uleb128 0x11
 931 00c5 01       		.uleb128 0x1
 932 00c6 31       		.uleb128 0x31
 933 00c7 13       		.uleb128 0x13
 934 00c8 00       		.byte	0
 935 00c9 00       		.byte	0
 936 00ca 0D       		.uleb128 0xd
 937 00cb 2E       		.uleb128 0x2e
 938 00cc 01       		.byte	0x1
 939 00cd 3F       		.uleb128 0x3f
 940 00ce 19       		.uleb128 0x19
 941 00cf 03       		.uleb128 0x3
 942 00d0 0E       		.uleb128 0xe
 943 00d1 3A       		.uleb128 0x3a
 944 00d2 0B       		.uleb128 0xb
 945 00d3 3B       		.uleb128 0x3b
 946 00d4 0B       		.uleb128 0xb
 947 00d5 27       		.uleb128 0x27
 948 00d6 19       		.uleb128 0x19
 949 00d7 11       		.uleb128 0x11
 950 00d8 01       		.uleb128 0x1
 951 00d9 12       		.uleb128 0x12
 952 00da 06       		.uleb128 0x6
 953 00db 40       		.uleb128 0x40
 954 00dc 18       		.uleb128 0x18
 955 00dd 9742     		.uleb128 0x2117
 956 00df 19       		.uleb128 0x19
 957 00e0 01       		.uleb128 0x1
 958 00e1 13       		.uleb128 0x13
 959 00e2 00       		.byte	0
 960 00e3 00       		.byte	0
 961 00e4 0E       		.uleb128 0xe
 962 00e5 34       		.uleb128 0x34
 963 00e6 00       		.byte	0
 964 00e7 03       		.uleb128 0x3
 965 00e8 0E       		.uleb128 0xe
 966 00e9 3A       		.uleb128 0x3a
 967 00ea 0B       		.uleb128 0xb
 968 00eb 3B       		.uleb128 0x3b
 969 00ec 0B       		.uleb128 0xb
 970 00ed 49       		.uleb128 0x49
 971 00ee 13       		.uleb128 0x13
 972 00ef 02       		.uleb128 0x2
 973 00f0 17       		.uleb128 0x17
 974 00f1 00       		.byte	0
 975 00f2 00       		.byte	0
 976 00f3 0F       		.uleb128 0xf
 977 00f4 898201   		.uleb128 0x4109
 978 00f7 01       		.byte	0x1
 979 00f8 11       		.uleb128 0x11
 980 00f9 01       		.uleb128 0x1
 981 00fa 31       		.uleb128 0x31
 982 00fb 13       		.uleb128 0x13
 983 00fc 01       		.uleb128 0x1
 984 00fd 13       		.uleb128 0x13
 985 00fe 00       		.byte	0
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 32


 986 00ff 00       		.byte	0
 987 0100 10       		.uleb128 0x10
 988 0101 8A8201   		.uleb128 0x410a
 989 0104 00       		.byte	0
 990 0105 02       		.uleb128 0x2
 991 0106 18       		.uleb128 0x18
 992 0107 9142     		.uleb128 0x2111
 993 0109 18       		.uleb128 0x18
 994 010a 00       		.byte	0
 995 010b 00       		.byte	0
 996 010c 11       		.uleb128 0x11
 997 010d 898201   		.uleb128 0x4109
 998 0110 01       		.byte	0x1
 999 0111 11       		.uleb128 0x11
 1000 0112 01       		.uleb128 0x1
 1001 0113 31       		.uleb128 0x31
 1002 0114 13       		.uleb128 0x13
 1003 0115 00       		.byte	0
 1004 0116 00       		.byte	0
 1005 0117 12       		.uleb128 0x12
 1006 0118 34       		.uleb128 0x34
 1007 0119 00       		.byte	0
 1008 011a 03       		.uleb128 0x3
 1009 011b 0E       		.uleb128 0xe
 1010 011c 3A       		.uleb128 0x3a
 1011 011d 0B       		.uleb128 0xb
 1012 011e 3B       		.uleb128 0x3b
 1013 011f 0B       		.uleb128 0xb
 1014 0120 49       		.uleb128 0x49
 1015 0121 13       		.uleb128 0x13
 1016 0122 3F       		.uleb128 0x3f
 1017 0123 19       		.uleb128 0x19
 1018 0124 02       		.uleb128 0x2
 1019 0125 18       		.uleb128 0x18
 1020 0126 00       		.byte	0
 1021 0127 00       		.byte	0
 1022 0128 13       		.uleb128 0x13
 1023 0129 2E       		.uleb128 0x2e
 1024 012a 00       		.byte	0
 1025 012b 3F       		.uleb128 0x3f
 1026 012c 19       		.uleb128 0x19
 1027 012d 3C       		.uleb128 0x3c
 1028 012e 19       		.uleb128 0x19
 1029 012f 6E       		.uleb128 0x6e
 1030 0130 0E       		.uleb128 0xe
 1031 0131 03       		.uleb128 0x3
 1032 0132 0E       		.uleb128 0xe
 1033 0133 3A       		.uleb128 0x3a
 1034 0134 0B       		.uleb128 0xb
 1035 0135 3B       		.uleb128 0x3b
 1036 0136 0B       		.uleb128 0xb
 1037 0137 00       		.byte	0
 1038 0138 00       		.byte	0
 1039 0139 00       		.byte	0
 1040              		.section	.debug_loc,"",%progbits
 1041              	.Ldebug_loc0:
 1042              	.LLST0:
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 33


 1043 0000 00000000 		.4byte	.LVL3
 1044 0004 00000000 		.4byte	.LVL3
 1045 0008 0100     		.2byte	0x1
 1046 000a 50       		.byte	0x50
 1047 000b 00000000 		.4byte	.LVL3
 1048 000f 02000000 		.4byte	.LFE12
 1049 0013 0600     		.2byte	0x6
 1050 0015 F3       		.byte	0xf3
 1051 0016 01       		.uleb128 0x1
 1052 0017 50       		.byte	0x50
 1053 0018 33       		.byte	0x33
 1054 0019 1A       		.byte	0x1a
 1055 001a 9F       		.byte	0x9f
 1056 001b 00000000 		.4byte	0
 1057 001f 00000000 		.4byte	0
 1058              	.LLST1:
 1059 0023 16000000 		.4byte	.LVL8
 1060 0027 23000000 		.4byte	.LVL9-1
 1061 002b 0100     		.2byte	0x1
 1062 002d 50       		.byte	0x50
 1063 002e 00000000 		.4byte	0
 1064 0032 00000000 		.4byte	0
 1065              		.section	.debug_aranges,"",%progbits
 1066 0000 84000000 		.4byte	0x84
 1067 0004 0200     		.2byte	0x2
 1068 0006 00000000 		.4byte	.Ldebug_info0
 1069 000a 04       		.byte	0x4
 1070 000b 00       		.byte	0
 1071 000c 0000     		.2byte	0
 1072 000e 0000     		.2byte	0
 1073 0010 00000000 		.4byte	.LFB1
 1074 0014 02000000 		.4byte	.LFE1-.LFB1
 1075 0018 00000000 		.4byte	.LFB3
 1076 001c 02000000 		.4byte	.LFE3-.LFB3
 1077 0020 00000000 		.4byte	.LFB4
 1078 0024 0C000000 		.4byte	.LFE4-.LFB4
 1079 0028 00000000 		.4byte	.LFB5
 1080 002c 0C000000 		.4byte	.LFE5-.LFB5
 1081 0030 00000000 		.4byte	.LFB6
 1082 0034 0C000000 		.4byte	.LFE6-.LFB6
 1083 0038 00000000 		.4byte	.LFB7
 1084 003c 0C000000 		.4byte	.LFE7-.LFB7
 1085 0040 00000000 		.4byte	.LFB8
 1086 0044 0C000000 		.4byte	.LFE8-.LFB8
 1087 0048 00000000 		.4byte	.LFB9
 1088 004c 0C000000 		.4byte	.LFE9-.LFB9
 1089 0050 00000000 		.4byte	.LFB10
 1090 0054 0C000000 		.4byte	.LFE10-.LFB10
 1091 0058 00000000 		.4byte	.LFB11
 1092 005c 14000000 		.4byte	.LFE11-.LFB11
 1093 0060 00000000 		.4byte	.LFB12
 1094 0064 02000000 		.4byte	.LFE12-.LFB12
 1095 0068 00000000 		.4byte	.LFB13
 1096 006c 14000000 		.4byte	.LFE13-.LFB13
 1097 0070 00000000 		.4byte	.LFB0
 1098 0074 34000000 		.4byte	.LFE0-.LFB0
 1099 0078 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 34


 1100 007c 18000000 		.4byte	.LFE2-.LFB2
 1101 0080 00000000 		.4byte	0
 1102 0084 00000000 		.4byte	0
 1103              		.section	.debug_ranges,"",%progbits
 1104              	.Ldebug_ranges0:
 1105 0000 00000000 		.4byte	.LFB1
 1106 0004 02000000 		.4byte	.LFE1
 1107 0008 00000000 		.4byte	.LFB3
 1108 000c 02000000 		.4byte	.LFE3
 1109 0010 00000000 		.4byte	.LFB4
 1110 0014 0C000000 		.4byte	.LFE4
 1111 0018 00000000 		.4byte	.LFB5
 1112 001c 0C000000 		.4byte	.LFE5
 1113 0020 00000000 		.4byte	.LFB6
 1114 0024 0C000000 		.4byte	.LFE6
 1115 0028 00000000 		.4byte	.LFB7
 1116 002c 0C000000 		.4byte	.LFE7
 1117 0030 00000000 		.4byte	.LFB8
 1118 0034 0C000000 		.4byte	.LFE8
 1119 0038 00000000 		.4byte	.LFB9
 1120 003c 0C000000 		.4byte	.LFE9
 1121 0040 00000000 		.4byte	.LFB10
 1122 0044 0C000000 		.4byte	.LFE10
 1123 0048 00000000 		.4byte	.LFB11
 1124 004c 14000000 		.4byte	.LFE11
 1125 0050 00000000 		.4byte	.LFB12
 1126 0054 02000000 		.4byte	.LFE12
 1127 0058 00000000 		.4byte	.LFB13
 1128 005c 14000000 		.4byte	.LFE13
 1129 0060 00000000 		.4byte	.LFB0
 1130 0064 34000000 		.4byte	.LFE0
 1131 0068 00000000 		.4byte	.LFB2
 1132 006c 18000000 		.4byte	.LFE2
 1133 0070 00000000 		.4byte	0
 1134 0074 00000000 		.4byte	0
 1135              		.section	.debug_line,"",%progbits
 1136              	.Ldebug_line0:
 1137 0000 55010000 		.section	.debug_str,"MS",%progbits,1
 1137      02004D00 
 1137      00000201 
 1137      FB0E0D00 
 1137      01010101 
 1138              	.LASF15:
 1139 0000 72656731 		.ascii	"reg16\000"
 1139      3600
 1140              	.LASF21:
 1141 0006 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1141      725F5265 
 1141      61645374 
 1141      61747573 
 1141      52656769 
 1142              	.LASF26:
 1143 001f 70657269 		.ascii	"period\000"
 1143      6F6400
 1144              	.LASF30:
 1145 0026 54696D65 		.ascii	"Timer_ReadCounter\000"
 1145      725F5265 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 35


 1145      6164436F 
 1145      756E7465 
 1145      7200
 1146              	.LASF3:
 1147 0038 73686F72 		.ascii	"short unsigned int\000"
 1147      7420756E 
 1147      7369676E 
 1147      65642069 
 1147      6E7400
 1148              	.LASF31:
 1149 004b 54696D65 		.ascii	"Timer_SetInterruptCount\000"
 1149      725F5365 
 1149      74496E74 
 1149      65727275 
 1149      7074436F 
 1150              	.LASF33:
 1151 0063 54696D65 		.ascii	"Timer_ClearFIFO\000"
 1151      725F436C 
 1151      65617246 
 1151      49464F00 
 1152              	.LASF39:
 1153 0073 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer.c\000"
 1153      72617465 
 1153      645F536F 
 1153      75726365 
 1153      5C50536F 
 1154              	.LASF19:
 1155 0092 54696D65 		.ascii	"Timer_Stop\000"
 1155      725F5374 
 1155      6F7000
 1156              	.LASF32:
 1157 009d 696E7465 		.ascii	"interruptCount\000"
 1157      72727570 
 1157      74436F75 
 1157      6E7400
 1158              	.LASF11:
 1159 00ac 666C6F61 		.ascii	"float\000"
 1159      7400
 1160              	.LASF29:
 1161 00b2 636F756E 		.ascii	"counter\000"
 1161      74657200 
 1162              	.LASF7:
 1163 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 1163      206C6F6E 
 1163      6720756E 
 1163      7369676E 
 1163      65642069 
 1164              	.LASF1:
 1165 00d1 756E7369 		.ascii	"unsigned char\000"
 1165      676E6564 
 1165      20636861 
 1165      7200
 1166              	.LASF41:
 1167 00df 54696D65 		.ascii	"Timer_interruptState\000"
 1167      725F696E 
 1167      74657272 
 1167      75707453 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 36


 1167      74617465 
 1168              	.LASF24:
 1169 00f4 54696D65 		.ascii	"Timer_WritePeriod\000"
 1169      725F5772 
 1169      69746550 
 1169      6572696F 
 1169      6400
 1170              	.LASF14:
 1171 0106 72656738 		.ascii	"reg8\000"
 1171      00
 1172              	.LASF23:
 1173 010b 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 1173      725F5365 
 1173      74496E74 
 1173      65727275 
 1173      70744D6F 
 1174              	.LASF9:
 1175 0122 75696E74 		.ascii	"uint8\000"
 1175      3800
 1176              	.LASF20:
 1177 0128 54696D65 		.ascii	"Timer_SoftwareCapture\000"
 1177      725F536F 
 1177      66747761 
 1177      72654361 
 1177      70747572 
 1178              	.LASF12:
 1179 013e 646F7562 		.ascii	"double\000"
 1179      6C6500
 1180              	.LASF22:
 1181 0145 54696D65 		.ascii	"Timer_ReadPeriod\000"
 1181      725F5265 
 1181      61645065 
 1181      72696F64 
 1181      00
 1182              	.LASF10:
 1183 0156 75696E74 		.ascii	"uint16\000"
 1183      313600
 1184              	.LASF35:
 1185 015d 54696D65 		.ascii	"Timer_Start\000"
 1185      725F5374 
 1185      61727400 
 1186              	.LASF5:
 1187 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 1187      20756E73 
 1187      69676E65 
 1187      6420696E 
 1187      7400
 1188              	.LASF8:
 1189 017b 756E7369 		.ascii	"unsigned int\000"
 1189      676E6564 
 1189      20696E74 
 1189      00
 1190              	.LASF37:
 1191 0188 43794578 		.ascii	"CyExitCriticalSection\000"
 1191      69744372 
 1191      69746963 
 1191      616C5365 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 37


 1191      6374696F 
 1192              	.LASF36:
 1193 019e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1193      74657243 
 1193      72697469 
 1193      63616C53 
 1193      65637469 
 1194              	.LASF38:
 1195 01b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1195      43313120 
 1195      352E342E 
 1195      31203230 
 1195      31363036 
 1196 01e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1196      20726576 
 1196      6973696F 
 1196      6E203233 
 1196      37373135 
 1197 021b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1197      66756E63 
 1197      74696F6E 
 1197      2D736563 
 1197      74696F6E 
 1198              	.LASF17:
 1199 0243 73697A65 		.ascii	"sizetype\000"
 1199      74797065 
 1199      00
 1200              	.LASF6:
 1201 024c 6C6F6E67 		.ascii	"long long int\000"
 1201      206C6F6E 
 1201      6720696E 
 1201      7400
 1202              	.LASF25:
 1203 025a 696E7465 		.ascii	"interruptMode\000"
 1203      72727570 
 1203      744D6F64 
 1203      6500
 1204              	.LASF2:
 1205 0268 73686F72 		.ascii	"short int\000"
 1205      7420696E 
 1205      7400
 1206              	.LASF27:
 1207 0272 54696D65 		.ascii	"Timer_ReadCapture\000"
 1207      725F5265 
 1207      61644361 
 1207      70747572 
 1207      6500
 1208              	.LASF40:
 1209 0284 433A5C55 		.ascii	"C:\\Users\\leevi\\Desktop\\Zumo_Ryhm-10\\ZumoBot.cy"
 1209      73657273 
 1209      5C6C6565 
 1209      76695C44 
 1209      65736B74 
 1210 02b2 64736E00 		.ascii	"dsn\000"
 1211              	.LASF28:
 1212 02b6 54696D65 		.ascii	"Timer_WriteCounter\000"
 1212      725F5772 
ARM GAS  C:\Users\leevi\AppData\Local\Temp\cc0OVlqw.s 			page 38


 1212      69746543 
 1212      6F756E74 
 1212      657200
 1213              	.LASF4:
 1214 02c9 6C6F6E67 		.ascii	"long int\000"
 1214      20696E74 
 1214      00
 1215              	.LASF13:
 1216 02d2 63686172 		.ascii	"char\000"
 1216      00
 1217              	.LASF16:
 1218 02d7 6C6F6E67 		.ascii	"long double\000"
 1218      20646F75 
 1218      626C6500 
 1219              	.LASF34:
 1220 02e3 54696D65 		.ascii	"Timer_Init\000"
 1220      725F496E 
 1220      697400
 1221              	.LASF0:
 1222 02ee 7369676E 		.ascii	"signed char\000"
 1222      65642063 
 1222      68617200 
 1223              	.LASF42:
 1224 02fa 54696D65 		.ascii	"Timer_initVar\000"
 1224      725F696E 
 1224      69745661 
 1224      7200
 1225              	.LASF18:
 1226 0308 54696D65 		.ascii	"Timer_Enable\000"
 1226      725F456E 
 1226      61626C65 
 1226      00
 1227              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
